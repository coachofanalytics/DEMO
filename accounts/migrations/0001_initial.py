# Generated by Django 3.2.6 on 2024-08-23 04:17

import accounts.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(default='90001', max_length=255)),
                ('zipcode', models.CharField(blank=True, max_length=255, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('category', models.IntegerField(choices=[(1, 'Bussines Training'), (2, 'Jobsupport'), (4, 'Investor'), (5, 'General User')], default=999)),
                ('is_admin', models.BooleanField(default=False, verbose_name='Is admin')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('HR Department', 'HR Department'), ('IT Department', 'IT Department'), ('Marketing Department', 'Marketing Department'), ('Finance Department', 'Finance Department'), ('Security Department', 'Security Department'), ('Management Department', 'Management Department'), ('Health Department', 'Health Department'), ('Other', 'Other')], default='Other', max_length=100)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Department safe URL')),
                ('is_featured', models.BooleanField(default=True, verbose_name='Is featured')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='TaskGroups',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(default='Group A', max_length=55, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team_Members',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('board', 'Board Members'), ('analytics_team', 'Analytics Team'), ('future_talent', 'Future Talent'), ('support_team', 'Support Team'), ('clients', 'Clients'), ('other', 'other')], default='Other', max_length=25)),
                ('title', models.CharField(default='Project Manager', max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'Team Classification',
            },
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Job_Support', 'Job_Support'), ('Interview', 'Interview'), ('Training', 'Training'), ('Mentorship', 'Mentorship'), ('Other', 'Other')], max_length=25)),
                ('sub_category', models.CharField(choices=[('Requirements', 'Requirements'), ('Troubleshooting', 'Troubleshooting'), ('Development', 'Development'), ('Testing', 'Testing'), ('Other', 'Other')], default='Other', max_length=25)),
                ('task', models.CharField(choices=[('reporting', 'reporting'), ('database', 'database'), ('Business Analysis', 'Business Analysis'), ('Data Cleaning', 'Data Cleaning'), ('Other', 'Other')], max_length=25)),
                ('plan', models.CharField(default='B', help_text='Required', max_length=255, verbose_name='group')),
                ('employee', models.CharField(default='CODA', help_text='Required', max_length=255, verbose_name='Company/End Client')),
                ('login_date', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.TimeField(auto_now_add=True)),
                ('duration', models.IntegerField(choices=[(1, 'One Hour'), (2, 'Two Hours'), (3, 'Three Hours'), (4, 'Four Hours'), (5, 'Five Hours'), (8, 'Eight Hours'), (10, 'Ten Hours')], default=2)),
                ('time', models.PositiveIntegerField(default=120, error_messages={'name': {' max_length': 'The maximum hours must be between 0 and 199'}}, help_text='Maximum 200')),
                ('author', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_client': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Client', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
                ('empname', models.ForeignKey(blank=True, limit_choices_to={'is_active': True, 'is_staff': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Employee', to=settings.AUTH_USER_MODEL, verbose_name='Employee')),
            ],
            options={
                'ordering': ['login_date'],
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(blank=True, null=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CredentialCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='Required', max_length=255, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='category safe URL')),
                ('description', models.TextField(default=None, max_length=1000)),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='entered on')),
                ('is_active', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=True)),
                ('department', models.ForeignKey(default=accounts.models.Department.get_default_pk, on_delete=django.db.models.deletion.CASCADE, to='accounts.department')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=255, verbose_name='credential Name')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='credential safe URL')),
                ('description', models.TextField(default=None, max_length=1000)),
                ('link_name', models.CharField(default='General', max_length=255)),
                ('link', models.CharField(blank=True, max_length=100, null=True)),
                ('password', models.CharField(blank=True, default='No Password Needed', max_length=255, null=True)),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='entered on')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=True)),
                ('user_types', models.CharField(choices=[('Superuser', 'Superuser'), ('Admin', 'Admin'), ('Employee', 'Employee'), ('Other', 'Other')], default='Other', max_length=25)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('category', models.ManyToManyField(blank=True, related_name='credentialcategory', to='accounts.CredentialCategory')),
            ],
            options={
                'verbose_name_plural': 'credentials',
            },
        ),
    ]
